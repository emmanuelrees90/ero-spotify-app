{"ast":null,"code":"var _jsxFileName = \"/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/components/ArtistsGrid.js\";\nimport { StyledGrid } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ArtistsGrid = ({\n  artists\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: artists && artists.length ? /*#__PURE__*/_jsxDEV(StyledGrid, {\n    type: \"artist\",\n    children: artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"grid__item\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid__item__inner\",\n        children: [artist.images[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: artist.images[0].url,\n            alt: artist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"grid__item__name overflow-ellipsis\",\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"grid__item__label\",\n          children: \"Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 25\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"empty-notice\",\n    children: \"No artists available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this)\n}, void 0, false);\n_c = ArtistsGrid;\nexport default ArtistsGrid;\nvar _c;\n$RefreshReg$(_c, \"ArtistsGrid\");","map":{"version":3,"names":["StyledGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","ArtistsGrid","artists","children","length","type","map","artist","i","className","images","src","url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/components/ArtistsGrid.js"],"sourcesContent":["import { StyledGrid } from '../styles';\n\nconst ArtistsGrid = ({ artists }) => (\n    <>\n        {artists && artists.length ? (\n            <StyledGrid type=\"artist\">\n                {artists.map((artist, i) => (\n                    <li className=\"grid__item\" key={i}>\n                        <div className=\"grid__item__inner\">\n                            {artist.images[0] && (\n                                <div className=\"grid__item__img\">\n                                    <img src={artist.images[0].url} alt={artist.name} />\n                                </div>\n                            )}\n                            <h3 className=\"grid__item__name overflow-ellipsis\">{artist.name}</h3>\n                            <p className=\"grid__item__label\">Artist</p>\n                        </div>\n                    </li>\n                ))}\n            </StyledGrid>\n        ) : (\n            <p className=\"empty-notice\">No artists available</p>\n        )}\n    </>\n);\n\nexport default ArtistsGrid;\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAQ,CAAC,kBAC5BJ,OAAA,CAAAE,SAAA;EAAAG,QAAA,EACKD,OAAO,IAAIA,OAAO,CAACE,MAAM,gBACtBN,OAAA,CAACF,UAAU;IAACS,IAAI,EAAC,QAAQ;IAAAF,QAAA,EACpBD,OAAO,CAACI,GAAG,CAAC,CAACC,MAAM,EAAEC,CAAC,kBACnBV,OAAA;MAAIW,SAAS,EAAC,YAAY;MAAAN,QAAA,eACtBL,OAAA;QAAKW,SAAS,EAAC,mBAAmB;QAAAN,QAAA,GAC7BI,MAAM,CAACG,MAAM,CAAC,CAAC,CAAC,iBACbZ,OAAA;UAAKW,SAAS,EAAC,iBAAiB;UAAAN,QAAA,eAC5BL,OAAA;YAAKa,GAAG,EAAEJ,MAAM,CAACG,MAAM,CAAC,CAAC,CAAC,CAACE,GAAI;YAACC,GAAG,EAAEN,MAAM,CAACO;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CACR,eACDpB,OAAA;UAAIW,SAAS,EAAC,oCAAoC;UAAAN,QAAA,EAAEI,MAAM,CAACO;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrEpB,OAAA;UAAGW,SAAS,EAAC,mBAAmB;UAAAN,QAAA,EAAC;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC,GATsBV,CAAC;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAU7B,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC,gBAEbpB,OAAA;IAAGW,SAAS,EAAC,cAAc;IAAAN,QAAA,EAAC;EAAoB;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG;AACtD,gBACH,CACL;AAACC,EAAA,GAtBIlB,WAAW;AAwBjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}