{"ast":null,"code":"var _jsxFileName = \"/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/pages/Profile.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { catchErrors } from \"../utils\";\nimport { getCurrentUserProfile, getCurrentUserPlaylists, getTopArtists, getTopTracks } from \"../spotify\";\nimport { SectionWrapper, ArtistsGrid, TrackList, PlaylistsGrid, Loader } from '../components';\nimport { StyledHeader } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const [profile, setProfile] = useState(null);\n  const [playlists, setPlaylists] = useState(null);\n  const [topArtists, setTopArtists] = useState(null);\n  const [topTracks, setTopTracks] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getCurrentUserProfile();\n      setProfile(data);\n      const userPlaylists = await getCurrentUserPlaylists();\n      setPlaylists(userPlaylists.data);\n      const userTopArtist = await getTopArtists();\n      setTopArtists(userTopArtist.data);\n      const userTopTracks = await getTopTracks();\n      setTopTracks(userTopTracks.data);\n    };\n    catchErrors(fetchData());\n  }, []);\n  console.log(topTracks);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: profile && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledHeader, {\n        type: \"user\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header__inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header__img\",\n            style: {\n              width: \"150px\",\n              height: \"150px\",\n              borderRadius: \"50%\"\n            },\n            src: \"/emmanuel.jpg\",\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header__overline\",\n              children: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"header__name\",\n              children: profile.display_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"header__meta\",\n              children: [playlists && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [playlists.total, \" Playlist\", playlists.total !== 1 ? \"s\" : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [profile.followers.total || 22, \" Follower\", profile.followers.total !== 1 ? \"s\" : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), topArtists && topTracks && playlists && /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(SectionWrapper, {\n          title: \"Top artists this month\",\n          seeAllLink: \"/top-artists\",\n          children: /*#__PURE__*/_jsxDEV(ArtistsGrid, {\n            artists: topArtists.items.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SectionWrapper, {\n          title: \"Top tracks this month\",\n          seeAllLink: \"/top-tracks\",\n          children: /*#__PURE__*/_jsxDEV(TrackList, {\n            tracks: topTracks.items.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(SectionWrapper, {\n          title: \"Playlists\",\n          seeAllLink: \"/playlists\",\n          children: /*#__PURE__*/_jsxDEV(PlaylistsGrid, {\n            playlists: playlists.items.slice(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(Profile, \"tdAvUw1qahKUOFxe04V4H7EDR+c=\");\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useState","useEffect","catchErrors","getCurrentUserProfile","getCurrentUserPlaylists","getTopArtists","getTopTracks","SectionWrapper","ArtistsGrid","TrackList","PlaylistsGrid","Loader","StyledHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","profile","setProfile","playlists","setPlaylists","topArtists","setTopArtists","topTracks","setTopTracks","fetchData","data","userPlaylists","userTopArtist","userTopTracks","console","log","children","type","className","style","width","height","borderRadius","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","display_name","total","followers","title","seeAllLink","artists","items","slice","tracks","_c","$RefreshReg$"],"sources":["/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/pages/Profile.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { catchErrors } from \"../utils\";\nimport { getCurrentUserProfile, getCurrentUserPlaylists, getTopArtists, getTopTracks } from \"../spotify\";\nimport { SectionWrapper, ArtistsGrid, TrackList, PlaylistsGrid,Loader } from '../components';\nimport { StyledHeader } from '../styles';\n\nconst Profile = () => {\n  const [profile, setProfile] = useState(null);\n  const [playlists, setPlaylists] = useState(null);\n  const [topArtists, setTopArtists] = useState(null);\n  const [topTracks, setTopTracks] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const { data } = await getCurrentUserProfile();\n      setProfile(data);\n      const userPlaylists = await getCurrentUserPlaylists();\n      setPlaylists(userPlaylists.data);\n      const userTopArtist = await getTopArtists();\n      setTopArtists(userTopArtist.data);\n      const userTopTracks = await getTopTracks();\n      setTopTracks(userTopTracks.data);\n    };\n\n    catchErrors(fetchData());\n  }, []);\n\n  console.log(topTracks);\n\n  return (\n    <>\n      {profile && (\n        <>\n          <StyledHeader type=\"user\">\n            <div className=\"header__inner\">\n              {/*{profile.images.length && profile.images[0].url && (\n                                <img className=\"header__img\" src={profile.images[0].url} alt=\"Avatar\"/>\n                            )}*/}\n              <img\n                className=\"header__img\"\n                style={{ width: \"150px\", height: \"150px\", borderRadius: \"50%\" }}\n                src=\"/emmanuel.jpg\"\n                alt=\"Avatar\"\n              />\n              <div>\n                <div className=\"header__overline\">Profile</div>\n                <h1 className=\"header__name\">{profile.display_name}</h1>\n                <p className=\"header__meta\">\n                  {playlists && (\n                    <span>\n                      {playlists.total} Playlist\n                      {playlists.total !== 1 ? \"s\" : \"\"}\n                    </span>\n                  )}\n                  <span>\n                    {profile.followers.total || 22} Follower\n                    {profile.followers.total !== 1 ? \"s\" : \"\"}\n                  </span>\n                </p>\n              </div>\n            </div>\n          </StyledHeader>\n          {topArtists && topTracks && playlists && (\n              <main>\n                <SectionWrapper title=\"Top artists this month\" seeAllLink=\"/top-artists\">\n                  <ArtistsGrid artists={topArtists.items.slice(0, 10)} />\n                </SectionWrapper>\n\n                <SectionWrapper title=\"Top tracks this month\" seeAllLink=\"/top-tracks\">\n                  <TrackList tracks={topTracks.items.slice(0, 10)} />\n                </SectionWrapper>\n\n                <SectionWrapper title=\"Playlists\" seeAllLink=\"/playlists\">\n                  <PlaylistsGrid playlists={playlists.items.slice(0, 10)} />\n                </SectionWrapper>\n              </main>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}