{"ast":null,"code":"var _jsxFileName = \"/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/components/PlaylistsGrid.js\";\nimport { Link } from 'react-router-dom';\nimport { StyledGrid } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlaylistsGrid = ({\n  playlists\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: playlists && playlists.length ? /*#__PURE__*/_jsxDEV(StyledGrid, {\n    children: playlists.map((playlist, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"grid__item\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: \"grid__item__inner\",\n        to: `/playlists/${playlist.id}`,\n        children: [playlist.images.length && playlist.images[0] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid__item__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: playlist.images[0].url,\n            alt: playlist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"grid__item__name overflow-ellipsis\",\n          children: playlist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"grid__item__label\",\n          children: \"Playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 25\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"empty-notice\",\n    children: \"No playlists available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this)\n}, void 0, false);\n_c = PlaylistsGrid;\nexport default PlaylistsGrid;\nvar _c;\n$RefreshReg$(_c, \"PlaylistsGrid\");","map":{"version":3,"names":["Link","StyledGrid","jsxDEV","_jsxDEV","Fragment","_Fragment","PlaylistsGrid","playlists","children","length","map","playlist","i","className","to","id","images","src","url","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/components/PlaylistsGrid.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport { StyledGrid } from '../styles';\n\nconst PlaylistsGrid = ({ playlists }) => (\n    <>\n        {playlists && playlists.length ? (\n            <StyledGrid>\n                {playlists.map((playlist, i) => (\n                    <li className=\"grid__item\" key={i}>\n                        <Link className=\"grid__item__inner\" to={`/playlists/${playlist.id}`}>\n                            {playlist.images.length && playlist.images[0] && (\n                                <div className=\"grid__item__img\">\n                                    <img src={playlist.images[0].url} alt={playlist.name} />\n                                </div>\n                            )}\n                            <h3 className=\"grid__item__name overflow-ellipsis\">{playlist.name}</h3>\n                            <p className=\"grid__item__label\">Playlist</p>\n                        </Link>\n                    </li>\n                ))}\n            </StyledGrid>\n        ) : (\n            <p className=\"empty-notice\">No playlists available</p>\n        )}\n    </>\n);\n\nexport default PlaylistsGrid;\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,kBAChCJ,OAAA,CAAAE,SAAA;EAAAG,QAAA,EACKD,SAAS,IAAIA,SAAS,CAACE,MAAM,gBAC1BN,OAAA,CAACF,UAAU;IAAAO,QAAA,EACND,SAAS,CAACG,GAAG,CAAC,CAACC,QAAQ,EAAEC,CAAC,kBACvBT,OAAA;MAAIU,SAAS,EAAC,YAAY;MAAAL,QAAA,eACtBL,OAAA,CAACH,IAAI;QAACa,SAAS,EAAC,mBAAmB;QAACC,EAAE,EAAG,cAAaH,QAAQ,CAACI,EAAG,EAAE;QAAAP,QAAA,GAC/DG,QAAQ,CAACK,MAAM,CAACP,MAAM,IAAIE,QAAQ,CAACK,MAAM,CAAC,CAAC,CAAC,iBACzCb,OAAA;UAAKU,SAAS,EAAC,iBAAiB;UAAAL,QAAA,eAC5BL,OAAA;YAAKc,GAAG,EAAEN,QAAQ,CAACK,MAAM,CAAC,CAAC,CAAC,CAACE,GAAI;YAACC,GAAG,EAAER,QAAQ,CAACS;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CACR,eACDrB,OAAA;UAAIU,SAAS,EAAC,oCAAoC;UAAAL,QAAA,EAAEG,QAAQ,CAACS;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvErB,OAAA;UAAGU,SAAS,EAAC,mBAAmB;UAAAL,QAAA,EAAC;QAAQ;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC,GATqBZ,CAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAU7B,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC,gBAEbrB,OAAA;IAAGU,SAAS,EAAC,cAAc;IAAAL,QAAA,EAAC;EAAsB;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG;AACxD,gBACH,CACL;AAACC,EAAA,GAtBInB,aAAa;AAwBnB,eAAeA,aAAa;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}