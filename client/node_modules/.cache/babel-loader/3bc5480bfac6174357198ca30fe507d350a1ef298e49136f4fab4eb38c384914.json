{"ast":null,"code":"var _jsxFileName = \"/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/components/TrackList.js\";\nimport { formatDuration } from '../utils';\nimport { StyledTrackList } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TrackList = ({\n  tracks\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: tracks && tracks.length ? /*#__PURE__*/_jsxDEV(StyledTrackList, {\n    children: tracks.map((track, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"track__item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track__item__num\",\n        children: i + 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track__item__title-group\",\n        children: [track.album.images.length && track.album.images[2] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__img\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: track.album.images[2].url,\n            alt: track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"track__item__name-artist\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__item__name overflow-ellipsis\",\n            children: track.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track__item__artist overflow-ellipsis\",\n            children: track.artists.map((artist, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [artist.name, i !== track.artists.length - 1 && ', ']\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track__item__album overflow-ellipsis\",\n        children: track.album.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track__item__duration\",\n        children: formatDuration(track.duration_ms)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"empty-notice\",\n    children: \"No tracks available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }, this)\n}, void 0, false);\n_c = TrackList;\nexport default TrackList;\nvar _c;\n$RefreshReg$(_c, \"TrackList\");","map":{"version":3,"names":["formatDuration","StyledTrackList","jsxDEV","_jsxDEV","Fragment","_Fragment","TrackList","tracks","children","length","map","track","i","className","fileName","_jsxFileName","lineNumber","columnNumber","album","images","src","url","alt","name","artists","artist","duration_ms","_c","$RefreshReg$"],"sources":["/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/components/TrackList.js"],"sourcesContent":["import { formatDuration } from '../utils';\nimport { StyledTrackList } from '../styles';\n\nconst TrackList = ({ tracks }) => (\n    <>\n        {tracks && tracks.length ? (\n            <StyledTrackList>\n                {tracks.map((track, i) => (\n                    <li className=\"track__item\" key={i}>\n                        <div className=\"track__item__num\">{i + 1}</div>\n                        <div className=\"track__item__title-group\">\n                            {track.album.images.length && track.album.images[2] && (\n                                <div className=\"track__item__img\">\n                                    <img src={track.album.images[2].url} alt={track.name} />\n                                </div>\n                            )}\n                            <div className=\"track__item__name-artist\">\n                                <div className=\"track__item__name overflow-ellipsis\">\n                                    {track.name}\n                                </div>\n                                <div className=\"track__item__artist overflow-ellipsis\">\n                                    {track.artists.map((artist, i) => (\n                                        <span key={i}>\n                      {artist.name}{i !== track.artists.length - 1 && ', '}\n                    </span>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"track__item__album overflow-ellipsis\">\n                            {track.album.name}\n                        </div>\n                        <div className=\"track__item__duration\">\n                            {formatDuration(track.duration_ms)}\n                        </div>\n                    </li>\n                ))}\n            </StyledTrackList>\n        ) : (\n            <p className=\"empty-notice\">No tracks available</p>\n        )}\n    </>\n);\n\nexport default TrackList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}