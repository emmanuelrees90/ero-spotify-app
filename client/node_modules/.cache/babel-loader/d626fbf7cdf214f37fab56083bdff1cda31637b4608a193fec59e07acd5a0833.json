{"ast":null,"code":"var _jsxFileName = \"/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/pages/Playlist.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { catchErrors } from '../utils';\nimport { getPlaylistById } from '../spotify';\nimport { StyledHeader } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [playlist, setPlaylist] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getPlaylistById(id);\n      setPlaylist(data);\n    };\n    catchErrors(fetchData());\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: playlist && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(StyledHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header__inner\",\n          children: [playlist.images.length && playlist.images[0].url && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header__img\",\n            src: playlist.images[0].url,\n            alt: \"Playlist Artwork\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header__overline\",\n              children: \"Playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"header__name\",\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"header__meta\",\n              children: [playlist.followers.total ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [playlist.followers.total, \" \", `follower${playlist.followers.total !== 1 ? 's' : ''}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 41\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [playlist.tracks.total, \" \", `song${playlist.tracks.total !== 1 ? 's' : ''}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n_s(Playlist, \"mMQE8vw0tjwQnQqjjrIEg7eEUSo=\", false, function () {\n  return [useParams];\n});\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["useState","useEffect","useParams","catchErrors","getPlaylistById","StyledHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","_s","id","playlist","setPlaylist","fetchData","data","children","className","images","length","url","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","followers","total","tracks","_c","$RefreshReg$"],"sources":["/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/pages/Playlist.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { catchErrors } from '../utils'\nimport { getPlaylistById } from '../spotify';\nimport { StyledHeader } from '../styles';\n\n\nconst Playlist = () => {\n    const { id } = useParams();\n    const [playlist, setPlaylist] = useState(null);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const { data } = await getPlaylistById(id);\n            setPlaylist(data);\n        };\n\n        catchErrors(fetchData());\n    }, [id]);\n\n    return (\n        <>\n            {playlist && (\n                <>\n                    <StyledHeader>\n                        <div className=\"header__inner\">\n                            {playlist.images.length && playlist.images[0].url && (\n                                <img className=\"header__img\" src={playlist.images[0].url} alt=\"Playlist Artwork\"/>\n                            )}\n                            <div>\n                                <div className=\"header__overline\">Playlist</div>\n                                <h1 className=\"header__name\">{playlist.name}</h1>\n                                <p className=\"header__meta\">\n                                    {playlist.followers.total ? (\n                                        <span>{playlist.followers.total} {`follower${playlist.followers.total !== 1 ? 's' : ''}`}</span>\n                                    ) : null}\n                                    <span>{playlist.tracks.total} {`song${playlist.tracks.total !== 1 ? 's' : ''}`}</span>\n                                </p>\n                            </div>\n                        </div>\n                    </StyledHeader>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default Playlist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}