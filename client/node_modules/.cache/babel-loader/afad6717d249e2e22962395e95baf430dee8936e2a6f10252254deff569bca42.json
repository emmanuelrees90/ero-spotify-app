{"ast":null,"code":"var _jsxFileName = \"/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/pages/Playlist.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { catchErrors } from '../utils';\nimport { getAudioFeaturesForTracks, getPlaylistById } from '../spotify';\nimport { SectionWrapper, TrackList } from '../components';\nimport { StyledHeader } from '../styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Playlist = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [playlist, setPlaylist] = useState(null);\n  const [tracksData, setTracksData] = useState(null);\n  const [tracks, setTracks] = useState(null);\n  const [audioFeatures, setAudioFeatures] = useState(null);\n  const tracksForTracklist = useMemo(() => {\n    if (!tracks) {\n      return;\n    }\n    return tracks.map(({\n      track\n    }) => track);\n  }, [tracks]);\n\n  // Map over tracks and add audio_features property to each track\n  const tracksWithAudioFeatures = useMemo(() => {\n    if (!tracks || !audioFeatures) {\n      return null;\n    }\n    return tracks.map(({\n      track\n    }) => {\n      const trackToAdd = track;\n      if (!track.audio_features) {\n        trackToAdd['audio_features'] = audioFeatures.find(item => {\n          if (!item || !track) {\n            return null;\n          }\n          return item.id === track.id;\n        });\n      }\n      return trackToAdd;\n    });\n  }, [tracks, audioFeatures]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await getPlaylistById(id);\n      setPlaylist(data);\n      setTracksData(data.tracks);\n    };\n    catchErrors(fetchData());\n  }, [id]);\n\n  // When tracksData updates, compile arrays of tracks and audioFeatures\n  useEffect(() => {\n    if (!tracksData) {\n      return;\n    }\n\n    // When tracksData updates, check if there are more tracks to fetch\n    // then update the state variable\n    const fetchMoreData = async () => {\n      if (tracksData.next) {\n        const {\n          data\n        } = await axios.get(tracksData.next);\n        setTracksData(data);\n      }\n    };\n    setTracks(tracks => [...(tracks ? tracks : []), ...tracksData.items]);\n    catchErrors(fetchMoreData());\n\n    // Also update the audioFeatures state variable using the track IDs\n    const fetchAudioFeatures = async () => {\n      const ids = tracksData.items.map(({\n        track\n      }) => track.id).join(',');\n      const {\n        data\n      } = await getAudioFeaturesForTracks(ids);\n      setAudioFeatures(audioFeatures => [...(audioFeatures ? audioFeatures : []), ...data['audio_features']]);\n    };\n    catchErrors(fetchAudioFeatures());\n  }, [tracksData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: playlist && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header__inner\",\n          children: [playlist.images.length && playlist.images[0].url && /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"header__img\",\n            src: playlist.images[0].url,\n            alt: \"Playlist Artwork\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"header__overline\",\n              children: \"Playlist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"header__name\",\n              children: playlist.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"header__meta\",\n              children: [playlist.followers.total ? /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [playlist.followers.total, \" \", `follower${playlist.followers.total !== 1 ? 's' : ''}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [playlist.tracks.total, \" \", `song${playlist.tracks.total !== 1 ? 's' : ''}`]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(SectionWrapper, {\n          title: \"Playlist\",\n          breadcrumb: true,\n          children: tracksForTracklist && /*#__PURE__*/_jsxDEV(TrackList, {\n            tracks: tracksForTracklist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(Playlist, \"SUJn9i52IocJQeG/BjdRaOguKfk=\", false, function () {\n  return [useParams];\n});\n_c = Playlist;\nexport default Playlist;\nvar _c;\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["useEffect","useMemo","useState","useParams","axios","catchErrors","getAudioFeaturesForTracks","getPlaylistById","SectionWrapper","TrackList","StyledHeader","jsxDEV","_jsxDEV","Fragment","_Fragment","Playlist","_s","id","playlist","setPlaylist","tracksData","setTracksData","tracks","setTracks","audioFeatures","setAudioFeatures","tracksForTracklist","map","track","tracksWithAudioFeatures","trackToAdd","audio_features","find","item","fetchData","data","fetchMoreData","next","get","items","fetchAudioFeatures","ids","join","children","className","images","length","url","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","followers","total","title","breadcrumb","_c","$RefreshReg$"],"sources":["/Users/emmanueloppong/WebstormProjects/spotify-api/client/src/pages/Playlist.js"],"sourcesContent":["import {useEffect, useMemo, useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport axios from 'axios';\nimport {catchErrors} from '../utils'\nimport {getAudioFeaturesForTracks, getPlaylistById} from '../spotify';\nimport {SectionWrapper, TrackList} from '../components';\nimport {StyledHeader} from '../styles';\n\nconst Playlist = () => {\n    const { id } = useParams();\n    const [playlist, setPlaylist] = useState(null);\n    const [tracksData, setTracksData] = useState(null);\n    const [tracks, setTracks] = useState(null);\n    const [audioFeatures, setAudioFeatures] = useState(null);\n    const tracksForTracklist = useMemo(() => {\n        if (!tracks) {\n            return;\n        }\n        return tracks.map(({ track }) => track);\n    }, [tracks]);\n\n    // Map over tracks and add audio_features property to each track\n    const tracksWithAudioFeatures = useMemo(() => {\n        if (!tracks || !audioFeatures) {\n            return null;\n        }\n\n        return tracks.map(({ track }) => {\n            const trackToAdd = track;\n\n            if (!track.audio_features) {\n                trackToAdd['audio_features'] = audioFeatures.find(item => {\n                    if (!item || !track) {\n                        return null;\n                    }\n                    return item.id === track.id;\n                });\n            }\n\n            return trackToAdd;\n        });\n    }, [tracks, audioFeatures]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const { data } = await getPlaylistById(id);\n            setPlaylist(data);\n            setTracksData(data.tracks);\n        };\n\n        catchErrors(fetchData());\n    }, [id]);\n\n    // When tracksData updates, compile arrays of tracks and audioFeatures\n    useEffect(() => {\n        if (!tracksData) {\n            return;\n        }\n\n        // When tracksData updates, check if there are more tracks to fetch\n        // then update the state variable\n        const fetchMoreData = async () => {\n            if (tracksData.next) {\n                const { data } = await axios.get(tracksData.next);\n                setTracksData(data);\n            }\n        };\n\n        setTracks(tracks => ([\n            ...tracks ? tracks : [],\n            ...tracksData.items\n        ]));\n\n        catchErrors(fetchMoreData());\n\n        // Also update the audioFeatures state variable using the track IDs\n        const fetchAudioFeatures = async () => {\n            const ids = tracksData.items.map(({ track }) => track.id).join(',');\n            const { data } = await getAudioFeaturesForTracks(ids);\n            setAudioFeatures(audioFeatures => ([\n                ...audioFeatures ? audioFeatures : [],\n                ...data['audio_features']\n            ]));\n        };\n        catchErrors(fetchAudioFeatures());\n    }, [tracksData]);\n\n    return (\n        <>\n            {playlist && (\n                <>\n                    <StyledHeader>\n                        <div className=\"header__inner\">\n                            {playlist.images.length && playlist.images[0].url && (\n                                <img className=\"header__img\" src={playlist.images[0].url} alt=\"Playlist Artwork\"/>\n                            )}\n                            <div>\n                                <div className=\"header__overline\">Playlist</div>\n                                <h1 className=\"header__name\">{playlist.name}</h1>\n                                <p className=\"header__meta\">\n                                    {playlist.followers.total ? (\n                                        <span>{playlist.followers.total} {`follower${playlist.followers.total !== 1 ? 's' : ''}`}</span>\n                                    ) : null}\n                                    <span>{playlist.tracks.total} {`song${playlist.tracks.total !== 1 ? 's' : ''}`}</span>\n                                </p>\n                            </div>\n                        </div>\n                    </StyledHeader>\n\n                    <main>\n                        <SectionWrapper title=\"Playlist\" breadcrumb={true}>\n                            {tracksForTracklist && (\n                                <TrackList tracks={tracksForTracklist} />\n                            )}\n                        </SectionWrapper>\n                    </main>\n                </>\n            )}\n        </>\n    )\n}\n\nexport default Playlist;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}